// Marking Mark
// Represents text which is marked or highlighted for reference or notation purposes



@use "dependencies" as *;
@use "base"         as base;
@use "general"      as gen;



$class              : "mark, .mark"                         !default;
$var-root           : base.$var-root                        !default;
$var-prefix         : "mark"                                !default;
$var-prefix-base    : base.$var-prefix                      !default;
$var: make-var($var-prefix, $var-prefix-base);

$font-size          : var(#{gen.$cssvar}font-size)          !default;
$font-family        : var(#{gen.$cssvar}font-family)        !default;
$font-weight        : var(#{gen.$cssvar}font-weight)        !default;
$font-style         : var(#{gen.$cssvar}font-style)         !default;
$text-decoration    : var(#{gen.$cssvar}text-decoration)    !default;
$lineheight         : var(#{gen.$cssvar}lineheight)         !default;

$color              : var(#{gen.$cssvar}color)              !default;
$backg              : var(#{$color-cssvar}warning-transp)   !default;

$padding-x          : 0.2em                                 !default;
$padding-y          : 0.2em                                 !default;
$border             : var(#{$border-cssvar}hair)            !default;
$border-radius      : var(#{$border-radius-cssvar}sm)       !default;



@include declare-cssvar($var-root) {
    #{$cssvar}font-size         : #{$font-size};
    #{$cssvar}font-family       : #{$font-family};
    #{$cssvar}font-weight       : #{$font-weight};
    #{$cssvar}font-style        : #{$font-style};
    #{$cssvar}text-decoration   : #{$text-decoration};
    #{$cssvar}lineheight        : #{$lineheight};

    #{$cssvar}color             : #{$color};
    #{$cssvar}backg             : #{$backg};

    #{$cssvar}padding-x         : #{$padding-x};
    #{$cssvar}padding-y         : #{$padding-y};
    #{$cssvar}border            : #{$border};
    #{$cssvar}border-radius     : #{$border-radius};
}



/* begin: specialized style */
@include alias($alias) { @include selector-append("-nested-self") {
    padding: 0px;
    font-size: 1em;
    font-weight: var(#{gen.$cssvar}font-weight-bold);
}}
@mixin style-nested-self($class) {
    @include selector-is($class) {
        @include selector-nested-self($parentheses: false) {
            @extend #{$alias}-nested-self;
        }
    }
}
@include style-nested-self($class);
/* end: specialized style */



/* begin: general style */
@mixin style {
    @if ($include) { @include  base.style; }
    @else          { @extend #{base.$alias} !optional; }


    font-size       : var(#{$cssvar}font-size);
    font-family     : var(#{$cssvar}font-family);
    font-weight     : var(#{$cssvar}font-weight);
    font-style      : var(#{$cssvar}font-style);
    text-decoration : var(#{$cssvar}text-decoration);
    line-height     : var(#{$cssvar}lineheight);

    color           : var(#{$cssvar}color);
    background      : var(#{$cssvar}backg);

    padding-left    : var(#{$cssvar}padding-x);
    padding-right   : var(#{$cssvar}padding-x);
    padding-top     : var(#{$cssvar}padding-y);
    padding-bottom  : var(#{$cssvar}padding-y);
    border          : var(#{$cssvar}border);
    border-radius   : var(#{$cssvar}border-radius);
}
/* end: general style */



@include class($class) { @include style; }