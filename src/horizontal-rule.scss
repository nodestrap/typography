// Horizontal Rule typography
// Represents a thematic break between paragraph-level elements



@use "dependencies" as *;
@use "base"         as base;
@use "general"      as gen;



$class              : "hr"                                  !default;
$var-root           : base.$var-root                        !default;
$var-prefix         : "hr"                                  !default;
$var-prefix-base    : base.$var-prefix                      !default;
$var: make-var($var-prefix, $var-prefix-base);

$color              : var(#{gen.$cssvar}color)              !default;
$opacity            : 0.25                                  !default;

$height             : var(#{$border-cssvar}hair)            !default;

$margin-top         : var(#{$spacer-cssvar}default)         !default;
$margin-bottom      : var(#{$spacer-cssvar}default)         !default;
$margin-left        : unset                                 !default;
$margin-right       : unset                                 !default;



@include declare-cssvar($var-root) {
    #{$cssvar}color         : #{$color};
    #{$cssvar}opacity       : #{$opacity};

    #{$cssvar}height        : #{$height};

    #{$cssvar}margin-top    : #{$margin-top};
    #{$cssvar}margin-bottom : #{$margin-bottom};
    #{$cssvar}margin-left   : #{$margin-left};
    #{$cssvar}margin-right  : #{$margin-right};
}



/* begin: general style */
@mixin style {
    @if ($include) { @include  base.style; }
    @else          { @extend #{base.$alias} !optional; }


    color               : inherit; // Reset Firefox's gray color
    background-color    : var(#{$cssvar}color);
    opacity             : var(#{$cssvar}opacity);

    height              : var(#{$cssvar}height);

    margin-top          : var(#{$cssvar}margin-top);
    margin-bottom       : var(#{$cssvar}margin-bottom);
    margin-left         : var(#{$cssvar}margin-left);
    margin-right        : var(#{$cssvar}margin-right);

    border              : 0px;
}
/* end: general style */



@include class($class) { @include style; }